// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"userprofile/models"
)

// PutUserIDOKCode is the HTTP code returned for type PutUserIDOK
const PutUserIDOKCode int = 200

/*
PutUserIDOK User updated

swagger:response putUserIdOK
*/
type PutUserIDOK struct {
}

// NewPutUserIDOK creates PutUserIDOK with default headers values
func NewPutUserIDOK() *PutUserIDOK {

	return &PutUserIDOK{}
}

// WriteResponse to the client
func (o *PutUserIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// PutUserIDBadRequestCode is the HTTP code returned for type PutUserIDBadRequest
const PutUserIDBadRequestCode int = 400

/*
PutUserIDBadRequest Invalid input

swagger:response putUserIdBadRequest
*/
type PutUserIDBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewPutUserIDBadRequest creates PutUserIDBadRequest with default headers values
func NewPutUserIDBadRequest() *PutUserIDBadRequest {

	return &PutUserIDBadRequest{}
}

// WithPayload adds the payload to the put user Id bad request response
func (o *PutUserIDBadRequest) WithPayload(payload *models.ErrorResponse) *PutUserIDBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put user Id bad request response
func (o *PutUserIDBadRequest) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutUserIDBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PutUserIDUnauthorizedCode is the HTTP code returned for type PutUserIDUnauthorized
const PutUserIDUnauthorizedCode int = 401

/*
PutUserIDUnauthorized Unauthorized

swagger:response putUserIdUnauthorized
*/
type PutUserIDUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewPutUserIDUnauthorized creates PutUserIDUnauthorized with default headers values
func NewPutUserIDUnauthorized() *PutUserIDUnauthorized {

	return &PutUserIDUnauthorized{}
}

// WithPayload adds the payload to the put user Id unauthorized response
func (o *PutUserIDUnauthorized) WithPayload(payload *models.ErrorResponse) *PutUserIDUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put user Id unauthorized response
func (o *PutUserIDUnauthorized) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutUserIDUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PutUserIDForbiddenCode is the HTTP code returned for type PutUserIDForbidden
const PutUserIDForbiddenCode int = 403

/*
PutUserIDForbidden Forbidden

swagger:response putUserIdForbidden
*/
type PutUserIDForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewPutUserIDForbidden creates PutUserIDForbidden with default headers values
func NewPutUserIDForbidden() *PutUserIDForbidden {

	return &PutUserIDForbidden{}
}

// WithPayload adds the payload to the put user Id forbidden response
func (o *PutUserIDForbidden) WithPayload(payload *models.ErrorResponse) *PutUserIDForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put user Id forbidden response
func (o *PutUserIDForbidden) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutUserIDForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PutUserIDNotFoundCode is the HTTP code returned for type PutUserIDNotFound
const PutUserIDNotFoundCode int = 404

/*
PutUserIDNotFound User not found

swagger:response putUserIdNotFound
*/
type PutUserIDNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewPutUserIDNotFound creates PutUserIDNotFound with default headers values
func NewPutUserIDNotFound() *PutUserIDNotFound {

	return &PutUserIDNotFound{}
}

// WithPayload adds the payload to the put user Id not found response
func (o *PutUserIDNotFound) WithPayload(payload *models.ErrorResponse) *PutUserIDNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put user Id not found response
func (o *PutUserIDNotFound) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutUserIDNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
